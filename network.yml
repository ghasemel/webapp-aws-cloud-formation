AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Ghasem Elyasi / Udacity DevOps Cloud Engineer - Project II
  This template deploys a VPC. with a pair of public and private subnets
  spread across two Availability Zones.
  It deploys:
  - an Internet Gateway with a default route on public subnets
  - a pair of NAT Gateways (one in each AZ)
  - a VPC Endpoint to access S3 bucket without charge
  - default routes in the private subnets to NAT gateways
  - default routes in the private subnets to VPC endpoint

Parameters:
  myEnvName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  myVpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.0.0.0/16

  myPublicSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
    Type: String
    Default: 10.0.0.0/24

  myPublicSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
    Type: String
    Default: 10.0.1.0/24

  myPrivateSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 10.0.2.0/24

  myPrivateSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
    Type: String
    Default: 10.0.3.0/24

Resources:
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref myVpcCIDR
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref myEnvName

  myInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref myEnvName

  myInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref myInternetGateway
      VpcId: !Ref myVPC

  myPublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref myPublicSubnet1CIDR
      VpcId: !Ref myVPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${myEnvName} Public Subnet (AZ1)

  myPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref myVPC
      Tags:
        - Key: Name
          Value: !Sub ${myEnvName} Public Route Table

  myPublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref myPublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref myInternetGateway

  myPublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref myPublicSubnet1
      RouteTableId: !Ref myPublicRouteTable

  myNatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: myInternetGatewayAttachment
    Properties:
      Domain: vpc

  myNatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt myNatGateway1EIP.AllocationId
      SubnetId: !Ref myPublicSubnet1

  myPrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ""]
      VpcId: !Ref myVPC
      CidrBlock: !Ref myPrivateSubnet1CIDR
      Tags:
        - Key: Name
          Value: !Sub ${myEnvName} Private Subnet (AZ1)

  myPrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref myVPC
      Tags:
        - Key: Name
          Value: !Sub ${myEnvName} Private Route Table 1

  myPrivateRoute1ToNatGateway:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref myPrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref myNatGateway1

  myPublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ""]
      VpcId: !Ref myVPC
      CidrBlock: !Ref myPublicSubnet2CIDR
      Tags:
        - Key: Name
          Value: !Sub ${myEnvName} Public Subent (AZ2)

  myPublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref myPublicSubnet2
      RouteTableId: !Ref myPublicRouteTable

  myNatGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn: myInternetGatewayAttachment
    Properties:
      Domain: vpc

  myNatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt myNatGateway2EIP.AllocationId
      SubnetId: !Ref myPublicSubnet2

  myPrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ""]
      VpcId: !Ref myVPC
      CidrBlock: !Ref myPrivateSubnet2CIDR
      Tags:
        - Key: Name
          Value: !Sub ${myEnvName} Private Subnet (AZ2)

  myPrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref myVPC
      Tags:
        - Key: Name
          Value: !Sub ${myEnvName} Private Route Table 2

  myPrivateRoute2ToNatGateway:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref myPrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref myNatGateway2

  myPrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref myPrivateSubnet2
      RouteTableId: !Ref myPrivateRouteTable2

  myVpcEndpointToS3:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.s3"
      VpcId: !Ref myVPC
      RouteTableIds:
        - !Ref myPrivateRouteTable1
        - !Ref myPrivateRouteTable2

Outputs:
  VPC:
    Description: A reference to the create VPC
    Value: !Ref myVPC
    Export:
      Name: !Sub ${myEnvName}-VPCID

  VPCPublicRouteTable:
    Description: Public Routing
    Value: !Ref myPublicRouteTable
    Export:
      Name: !Sub ${myEnvName}-PUB-RT

  VPCPrivateRouteTable1:
    Description: Private Routing AZ1
    Value: !Ref myPrivateRouteTable1
    Export:
      Name: !Sub ${myEnvName}-PRI1-RT

  VPCPrivateRouteTable2:
    Description: Private Routing AZ1
    Value: !Ref myPrivateRouteTable2
    Export:
      Name: !Sub ${myEnvName}-PRI2-RT

  PublicSubnets:
    Description: A list of the public subnets
    Value: !Join [",", [!Ref myPublicSubnet1, !Ref myPublicSubnet2]]
    Export:
      Name: !Sub ${myEnvName}-PUB-NETS

  PrivateSubnets:
    Description: A list of the private subnets
    Value: !Join [",", [!Ref myPrivateSubnet1, !Ref myPrivateSubnet2]]
    Export:
      Name: !Sub ${myEnvName}-PRI-NETS

  PublicSubnet1:
    Description: A reference to the public subnet in the 1st Availability Zone
    Value: !Ref myPublicSubnet1
    Export:
      Name: !Sub ${myEnvName}-PUB1-SN

  PublicSubnet2:
    Description: A reference to the public subnet in the 2nd Availability Zone
    Value: !Ref myPublicSubnet2
    Export:
      Name: !Sub ${myEnvName}-PUB2-SN

  PrivateSubnet1:
    Description: A reference to the private subnet in the 1st Availability Zone
    Value: !Ref myPrivateSubnet1
    Export:
      Name: !Sub ${myEnvName}-PRI1-SN

  PrivateSubnet2:
    Description: A reference to the private subnet in the 2nd Availability Zone
    Value: !Ref myPrivateSubnet2
    Export:
      Name: !Sub ${myEnvName}-PRI2-SN
